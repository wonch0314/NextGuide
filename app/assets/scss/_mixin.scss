 
// 글자 숨기기
@mixin text-hidden {
  text-indent: -9999em;
  overflow: hidden;
}

// 블릿
@mixin list-bullet($color: #111) {
  position: relative;
  padding-left: 15px;
  margin-top: 5px;
  &:before {
    content: '';
    position: absolute;
    display: block;
    top: 7px;
    left: 0;
    width: 4px;
    height: 4px;
    border-radius: 50%;
    margin-right: 6px;
    background-color: $color;
  }
}

// 말줄임
@mixin ellipsis($line, $line-height : $line-height) {
    @if ($line == 1) { 
        overflow: hidden; 
        text-overflow: ellipsis; 
        white-space: nowrap; 
    } @else { 
        display: -webkit-box;
        max-height:$line-height * $line + em; //ie 크로스브라우징
        overflow: hidden; 
        text-overflow: ellipsis; 
        -webkit-box-orient: vertical; 
        -webkit-line-clamp: $line; 
        word-break: normal;
    } 
}

// 웹키트 탭 하이라이트 컬러
@mixin tap-highlight {
    -webkit-tap-highlight-color: rgba(0, 0, 0, .1);
  }

// 그라디언트 생성
@mixin horizontal-gradient($from, $to, $stop: 100%) {
  // fallback/image non-cover color
  background-color: $from;
  // Firefox 3.6+
  background-image: -moz-linear-gradient(left, $from 0%, $to $stop);
  // Safari 4+, Chrome 1+
  background-image: -webkit-gradient(linear,
      left top,
      right top,
      color-stop(0%, $from),
      color-stop($stop, $to));
  // Safari 5.1+, Chrome 10+
  background-image: -webkit-linear-gradient(left, $from 0%, $to $stop);
  // Opera 11.10+
  background-image: -o-linear-gradient(left, $from 0%, $to $stop);
  // IE10+
  background: -ms-linear-gradient(left, $from 0%, $to $stop);
  // Standard
  background: linear-gradient(to right, $from 0%, $to $stop);
  // IE6-9
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='$from', endColorstr='$to', GradientType=1);
}

// placeholder
@mixin placeholder {
  &::-webkit-input-placeholder {
    @content;
  }

  &:-moz-placeholder {
    @content;
  }

  &::-moz-placeholder {
    @content;
  }

  &:-ms-input-placeholder {
    @content;
  }
}

// Flex
@mixin flex($display: flex, $h: null, $v: null) {
	display: $display;
	@if $h != null {
		justify-content: $h;
	}
	@if $v != null {
		align-items: $v;
	}
	@content;
}

// Transition
@mixin transition($transition...) {
	@if length($transition) == 0 {
		$transition: $transition-base;
	}

	@if length($transition) > 1 {
		@each $value in $transition {
			@if $value == null or $value == none {
				@warn "The keyword 'none' or 'null' must be used as a single argument.";
			}
		}
	}

	@if $enable-transitions {
		@if nth($transition, 1) != null {
			transition: $transition;
		}

		@if $enable-reduced-motion and nth($transition, 1) != null and nth($transition, 1) != none {
			@media (prefers-reduced-motion: reduce) {
				transition: none;
			}
		}
	}
}

// Slide Down
@mixin slide-down($active: ".active", $target: max-height, $timing: 0.2s) {
	overflow: hidden;
	max-height: 0;
	@include transition($target $timing ease-in-out);

	#{$active} &,
	&#{$active} {
		max-height: 100vh;
	}
}